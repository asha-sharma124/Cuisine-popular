{"ast":null,"code":"var _jsxFileName = \"/home/dsgaurav/Downloads/final/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the user's cart from the backend\n  const fetchCartFromBackend = async () => {\n    const token = localStorage.getItem(\"access\"); // Fetch the access token from localStorage\n    if (!token || !userId) return; // If no token or userId, return early\n\n    try {\n      const res = await axios.get(\"http://127.0.0.1:8000/api/orders/carts/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCart(res.data.items); // Assuming `items` is an array of cart items\n    } catch (error) {\n      console.error(\"Error fetching cart:\", error);\n    } finally {\n      setLoading(false); // Set loading to false once the cart is fetched\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      fetchCartFromBackend();\n    }\n  }, [userId]);\n  const addToCart = item => {\n    console.log(\"Adding to cart:\", item);\n    setCart(prevCart => {\n      const existing = prevCart.find(c => c.item.id === item.id);\n      if (existing) {\n        return prevCart.map(c => c.item.id === item.id ? {\n          ...c,\n          quantity: c.quantity + 1\n        } : c);\n      }\n      return [...prevCart, {\n        item,\n        quantity: 1\n      }];\n    });\n  };\n  const removeFromCart = itemId => {\n    setCart(prevCart => prevCart.map(c => c.item.id === itemId ? {\n      ...c,\n      quantity: c.quantity - 1\n    } : c).filter(c => c.quantity > 0));\n  };\n  const clearFromCart = async itemId => {\n    const token = localStorage.getItem(\"access\");\n    try {\n      await axios.delete(`http://127.0.0.1:8000/api/orders/cart/item/${itemId}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Remove from frontend state\n      setCart(prevCart => prevCart.filter(c => c.item.id !== itemId));\n    } catch (error) {\n      console.error(\"Failed to remove item from backend:\", error);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    localStorage.removeItem(\"cart\");\n  };\n  const getTotalQuantity = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      addToCart,\n      removeFromCart,\n      clearFromCart,\n      getTotalQuantity,\n      clearCart,\n      loading // Provide the loading state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"7zhzKB4BcEtA60hiOkk25bvqrSE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","userId","setUserId","localStorage","getItem","loading","setLoading","fetchCartFromBackend","token","res","get","headers","Authorization","data","items","error","console","addToCart","item","log","prevCart","existing","find","c","id","map","quantity","removeFromCart","itemId","filter","clearFromCart","delete","clearCart","removeItem","getTotalQuantity","reduce","total","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dsgaurav/Downloads/final/frontend/src/context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch the user's cart from the backend\r\n  const fetchCartFromBackend = async () => {\r\n    const token = localStorage.getItem(\"access\"); // Fetch the access token from localStorage\r\n    if (!token || !userId) return; // If no token or userId, return early\r\n\r\n    try {\r\n      const res = await axios.get(\"http://127.0.0.1:8000/api/orders/carts/\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setCart(res.data.items); // Assuming `items` is an array of cart items\r\n    } catch (error) {\r\n      console.error(\"Error fetching cart:\", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false once the cart is fetched\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchCartFromBackend();\r\n    }\r\n  }, [userId]);\r\n\r\n  const addToCart = (item) => {\r\n    console.log(\"Adding to cart:\", item);\r\n    setCart((prevCart) => {\r\n      const existing = prevCart.find((c) => c.item.id === item.id);\r\n      if (existing) {\r\n        return prevCart.map((c) =>\r\n          c.item.id === item.id ? { ...c, quantity: c.quantity + 1 } : c\r\n        );\r\n      }\r\n      return [...prevCart, { item, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCart((prevCart) =>\r\n      prevCart\r\n        .map((c) =>\r\n          c.item.id === itemId ? { ...c, quantity: c.quantity - 1 } : c\r\n        )\r\n        .filter((c) => c.quantity > 0)\r\n    );\r\n  };\r\n\r\n \r\nconst clearFromCart = async (itemId) => {\r\n  const token = localStorage.getItem(\"access\");\r\n\r\n  try {\r\n    await axios.delete(`http://127.0.0.1:8000/api/orders/cart/item/${itemId}/`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    // Remove from frontend state\r\n    setCart((prevCart) => prevCart.filter((c) => c.item.id !== itemId));\r\n  } catch (error) {\r\n    console.error(\"Failed to remove item from backend:\", error);\r\n  }\r\n};\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    localStorage.removeItem(\"cart\");\r\n  };\r\n\r\n  const getTotalQuantity = () => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        setCart,\r\n        addToCart,\r\n        removeFromCart,\r\n        clearFromCart,\r\n        getTotalQuantity,\r\n        clearCart,\r\n        loading, // Provide the loading state\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}